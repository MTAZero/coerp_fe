{"version":3,"sources":["webpack:///./src/app/account/auth/confirm/confirm.component.html","webpack:///./src/app/account/auth/first-login/first-login.component.html","webpack:///./src/app/account/auth/login/login.component.html","webpack:///./src/app/account/auth/passwordreset/passwordreset.component.html","webpack:///./src/app/account/auth/signup/signup.component.html","webpack:///./src/app/account/account-routing.module.ts","webpack:///./src/app/account/account.module.ts","webpack:///./src/app/account/auth/auth-routing.ts","webpack:///./src/app/account/auth/auth.module.ts","webpack:///./src/app/account/auth/confirm/confirm.component.scss","webpack:///./src/app/account/auth/confirm/confirm.component.ts","webpack:///./src/app/account/auth/first-login/first-login.component.scss","webpack:///./src/app/account/auth/first-login/first-login.component.ts","webpack:///./src/app/account/auth/login/login.component.scss","webpack:///./src/app/account/auth/login/login.component.ts","webpack:///./src/app/account/auth/passwordreset/passwordreset.component.scss","webpack:///./src/app/account/auth/passwordreset/passwordreset.component.ts","webpack:///./src/app/account/auth/signup/signup.component.scss","webpack:///./src/app/account/auth/signup/signup.component.ts"],"names":[],"mappings":"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","file":"account-account-module-es2015.js","sourcesContent":["module.exports = \"<div class=\\\"account-pages mt-5 mb-5\\\">\\n  <div class=\\\"container\\\">\\n    <div class=\\\"row justify-content-center\\\">\\n      <div class=\\\"col-md-8 col-lg-6 col-xl-5\\\">\\n        <div class=\\\"card bg-pattern\\\">\\n          <div class=\\\"card-body p-4\\\">\\n            <!-- Logo -->\\n            <div class=\\\"text-center w-75 m-auto\\\">\\n              <a routerLink=\\\"/account/login\\\">\\n                <img src=\\\"assets/images/logo-dark.png\\\" alt=\\\"\\\" height=\\\"22\\\" />\\n              </a>\\n            </div>\\n\\n            <div class=\\\"mt-3 text-center\\\">\\n              <svg version=\\\"1.1\\\" xmlns:x=\\\"&ns_extend;\\\" xmlns:i=\\\"&ns_ai;\\\" xmlns:graph=\\\"&ns_graphs;\\\"\\n                xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\" x=\\\"0px\\\" y=\\\"0px\\\"\\n                viewBox=\\\"0 0 98 98\\\" style=\\\"height: 120px;\\\" xml:space=\\\"preserve\\\">\\n                <style type=\\\"text/css\\\">\\n                  .st0 {\\n                    fill: #FFFFFF;\\n                  }\\n\\n                  .st1 {\\n                    fill: #1abc9c;\\n                  }\\n\\n                  .st2 {\\n                    fill: #FFFFFF;\\n                    stroke: #1abc9c;\\n                    stroke-width: 2;\\n                    stroke-miterlimit: 10;\\n                  }\\n\\n                  .st3 {\\n                    fill: none;\\n                    stroke: #FFFFFF;\\n                    stroke-width: 2;\\n                    stroke-linecap: round;\\n                    stroke-miterlimit: 10;\\n                  }\\n                </style>\\n                <g i:extraneous=\\\"self\\\">\\n                  <circle id=\\\"XMLID_50_\\\" class=\\\"st0\\\" cx=\\\"49\\\" cy=\\\"49\\\" r=\\\"49\\\" />\\n                  <g id=\\\"XMLID_4_\\\">\\n                    <path id=\\\"XMLID_49_\\\" class=\\\"st1\\\"\\n                      d=\\\"M77.3,42.7V77c0,0.6-0.4,1-1,1H21.7c-0.5,0-1-0.5-1-1V42.7c0-0.3,0.1-0.6,0.4-0.8l27.3-21.7\\n                                                        c0.3-0.3,0.8-0.3,1.2,0l27.3,21.7C77.1,42.1,77.3,42.4,77.3,42.7z\\\" />\\n                    <path id=\\\"XMLID_48_\\\" class=\\\"st2\\\" d=\\\"M66.5,69.5h-35c-1.1,0-2-0.9-2-2V26.8c0-1.1,0.9-2,2-2h35c1.1,0,2,0.9,2,2v40.7\\n                                                        C68.5,68.6,67.6,69.5,66.5,69.5z\\\" />\\n                    <path id=\\\"XMLID_47_\\\" class=\\\"st1\\\" d=\\\"M62.9,33.4H47.2c-0.5,0-0.9-0.4-0.9-0.9v-0.2c0-0.5,0.4-0.9,0.9-0.9h15.7\\n                                                        c0.5,0,0.9,0.4,0.9,0.9v0.2C63.8,33,63.4,33.4,62.9,33.4z\\\" />\\n                    <path id=\\\"XMLID_46_\\\" class=\\\"st1\\\" d=\\\"M62.9,40.3H47.2c-0.5,0-0.9-0.4-0.9-0.9v-0.2c0-0.5,0.4-0.9,0.9-0.9h15.7\\n                                                        c0.5,0,0.9,0.4,0.9,0.9v0.2C63.8,39.9,63.4,40.3,62.9,40.3z\\\" />\\n                    <path id=\\\"XMLID_45_\\\" class=\\\"st1\\\" d=\\\"M62.9,47.2H47.2c-0.5,0-0.9-0.4-0.9-0.9v-0.2c0-0.5,0.4-0.9,0.9-0.9h15.7\\n                                                        c0.5,0,0.9,0.4,0.9,0.9v0.2C63.8,46.8,63.4,47.2,62.9,47.2z\\\" />\\n                    <path id=\\\"XMLID_44_\\\" class=\\\"st1\\\" d=\\\"M62.9,54.1H47.2c-0.5,0-0.9-0.4-0.9-0.9v-0.2c0-0.5,0.4-0.9,0.9-0.9h15.7\\n                                                        c0.5,0,0.9,0.4,0.9,0.9v0.2C63.8,53.7,63.4,54.1,62.9,54.1z\\\" />\\n                    <path id=\\\"XMLID_43_\\\" class=\\\"st2\\\" d=\\\"M41.6,40.1h-5.8c-0.6,0-1-0.4-1-1v-6.7c0-0.6,0.4-1,1-1h5.8c0.6,0,1,0.4,1,1v6.7\\n                                                        C42.6,39.7,42.2,40.1,41.6,40.1z\\\" />\\n                    <path id=\\\"XMLID_42_\\\" class=\\\"st2\\\" d=\\\"M41.6,54.2h-5.8c-0.6,0-1-0.4-1-1v-6.7c0-0.6,0.4-1,1-1h5.8c0.6,0,1,0.4,1,1v6.7\\n                                                        C42.6,53.8,42.2,54.2,41.6,54.2z\\\" />\\n                    <path id=\\\"XMLID_41_\\\" class=\\\"st1\\\"\\n                      d=\\\"M23.4,46.2l25,17.8c0.3,0.2,0.7,0.2,1.1,0l26.8-19.8l-3.3,30.9H27.7L23.4,46.2z\\\" />\\n                    <path id=\\\"XMLID_40_\\\" class=\\\"st3\\\" d=\\\"M74.9,45.2L49.5,63.5c-0.3,0.2-0.7,0.2-1.1,0L23.2,45.2\\\" />\\n                  </g>\\n                </g>\\n              </svg>\\n\\n              <h4 class=\\\"text-dark-50 text-center mt-4 font-weight-bold\\\">Please check your email</h4>\\n              <p class=\\\"text-muted mb-4\\\">\\n                A email has been send to <b>youremail@domain.com</b>.\\n                Please check for an email from company and click on the included link to\\n                reset your password.\\n              </p>\\n            </div>\\n\\n            <div class=\\\"form-group mb-0 text-center mt-3\\\">\\n              <a routerLink=\\\"/account/login\\\" class=\\\"btn btn-primary\\\"><i class=\\\"mdi mdi-home mr-1\\\"></i>\\n                Back to Home</a>\\n            </div>\\n\\n          </div> <!-- end card-body-->\\n        </div>\\n        <!-- end card-->\\n\\n      </div> <!-- end col -->\\n    </div>\\n    <!-- end row -->\\n  </div>\\n  <!-- end container -->\\n</div>\\n<!-- end page -->\\n\\n<footer class=\\\"footer footer-alt\\\">\\n  2015 - 2019 &copy; UBold theme by <a href=\\\"\\\" class=\\\"text-white-50\\\">Coderthemes</a> \\n</footer>\"","module.exports = \"<div class=\\\"account-pages mt-5 mb-5\\\">\\n  <div class=\\\"container\\\">\\n    <div class=\\\"row justify-content-center\\\">\\n      <div class=\\\"col-md-8 col-lg-6 col-xl-5\\\">\\n        <div class=\\\"card bg-pattern\\\">\\n          <div class=\\\"card-body p-4\\\">\\n            <div class=\\\"text-center w-75 m-auto\\\">\\n              <a routerLink=\\\"/account/login\\\">\\n                <img src=\\\"assets/images/1.JPG\\\" alt=\\\"\\\" height=\\\"22\\\" />\\n              </a>\\n              <p class=\\\"text-muted mb-4 mt-3\\\">\\n                Thay đổi mật khẩu mặc định cho lần đăng nhập đầu tiên\\n              </p>\\n            </div>\\n            <form\\n              class=\\\"needs-validation\\\"\\n              name=\\\"resetForm\\\"\\n              [formGroup]=\\\"form\\\"\\n              (ngSubmit)=\\\"onSubmit()\\\"\\n              novalidate\\n            >\\n              <div class=\\\"form-group mb-3\\\">\\n                <label>Mật khẩu cũ</label>\\n                <input\\n                  type=\\\"password\\\"\\n                  formControlName=\\\"OldPassword\\\"\\n                  class=\\\"form-control\\\"\\n                  [ngClass]=\\\"{\\n                    'is-invalid': submitted && f.OldPassword.errors\\n                  }\\\"\\n                  placeholder=\\\"Nhập mật khẩu cũ\\\"\\n                />\\n                <div *ngIf=\\\"submitted && f.OldPassword.errors\\\" class=\\\"invalid-feedback\\\">\\n                  <div *ngIf=\\\"f.OldPassword.errors.required\\\">\\n                    Trường mật khẩu cũ không được để trống\\n                  </div>\\n                </div>\\n              </div>\\n\\n              <div class=\\\"form-group mb-3\\\">\\n                <label>Mật khẩu mới</label>\\n                <input\\n                  type=\\\"password\\\"\\n                  formControlName=\\\"NewPassword\\\"\\n                  class=\\\"form-control\\\"\\n                  [ngClass]=\\\"{\\n                    'is-invalid': submitted && f.NewPassword.errors\\n                  }\\\"\\n                  placeholder=\\\"Nhập mật khẩu mới\\\"\\n                />\\n                <div *ngIf=\\\"submitted && f.NewPassword.errors\\\" class=\\\"invalid-feedback\\\">\\n                  <div *ngIf=\\\"f.NewPassword.errors.required\\\">\\n                    Trường mật khẩu mới không được để trống\\n                  </div>\\n                </div>\\n              </div>\\n\\n              <div class=\\\"form-group mb-3\\\">\\n                <label>Xác nhận mật khẩu mới</label>\\n                <input\\n                  type=\\\"password\\\"\\n                  formControlName=\\\"ConfirmPassword\\\"\\n                  class=\\\"form-control\\\"\\n                  [ngClass]=\\\"{\\n                    'is-invalid': submitted && f.ConfirmPassword.errors\\n                  }\\\"\\n                  placeholder=\\\"Nhập xác nhận mật khẩu\\\"\\n                />\\n                <div *ngIf=\\\"submitted && f.ConfirmPassword.errors\\\" class=\\\"invalid-feedback\\\">\\n                  <div *ngIf=\\\"f.ConfirmPassword.errors.required\\\">\\n                    Trường mật khẩu cũ không được để trống\\n                  </div>\\n                </div>\\n              </div>\\n\\n              <div class=\\\"form-group mb-0 text-center\\\">\\n                <button class=\\\"btn btn-primary btn-block\\\" type=\\\"submit\\\">\\n                  Gửi\\n                </button>\\n              </div>\\n            </form>\\n          </div>\\n        </div>\\n\\n        <div class=\\\"row mt-3\\\">\\n          <div class=\\\"col-12 text-center\\\">\\n            <p class=\\\"text-white-50\\\">\\n              Quay lại\\n              <a routerLink=\\\"/account/login\\\" class=\\\"text-white ml-1\\\"><b>Đăng nhập</b></a>\\n            </p>\\n          </div>\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n\\n<footer class=\\\"footer footer-alt\\\">\\n  2019-2020 Bản quyền thuộc\\n  <a href=\\\"\\\" class=\\\"text-white-50\\\">CoERP</a>\\n</footer>\\n\"","module.exports = \"<div class=\\\"account-pages mt-5 mb-5\\\">\\n  <div class=\\\"container\\\">\\n    <div class=\\\"row justify-content-center\\\">\\n      <div class=\\\"col-md-8 col-lg-6 col-xl-5\\\">\\n        <div class=\\\"card bg-pattern\\\">\\n          <div class=\\\"card-body p-4\\\">\\n            <!-- Logo -->\\n            <div class=\\\"text-center w-75 m-auto\\\">\\n              <a routerLink=\\\"/\\\">\\n                <img src=\\\"assets/images/1.JPG\\\" alt=\\\"\\\" height=\\\"22\\\" />\\n              </a>\\n              <p class=\\\"text-muted mb-4 mt-3\\\">\\n                Nhập tên đăng nhập và mật khẩu để truy cập trang quản trị\\n              </p>\\n            </div>\\n\\n            <form\\n              class=\\\"needs-validation\\\"\\n              name=\\\"loginForm\\\"\\n              [formGroup]=\\\"loginForm\\\"\\n              (ngSubmit)=\\\"onSubmit()\\\"\\n              novalidate\\n            >\\n              <div class=\\\"form-group mb-3\\\">\\n                <label for=\\\"username\\\">Tên đăng nhập</label>\\n\\n                <input\\n                  formControlName=\\\"username\\\"\\n                  class=\\\"form-control\\\"\\n                  [ngClass]=\\\"{ 'is-invalid': submitted && f.username.errors }\\\"\\n                  id=\\\"username\\\"\\n                  placeholder=\\\"Tên đăng nhập\\\"\\n                />\\n\\n                <div *ngIf=\\\"submitted && f.username.errors\\\" class=\\\"invalid-feedback\\\">\\n                  <div *ngIf=\\\"f.username.errors.required\\\">\\n                    Trường tên đăng nhập không được để trống\\n                  </div>\\n                </div>\\n              </div>\\n\\n              <div class=\\\"form-group mb-3\\\">\\n                <label for=\\\"password\\\">Mật khẩu</label>\\n\\n                <input\\n                  type=\\\"password\\\"\\n                  formControlName=\\\"password\\\"\\n                  class=\\\"form-control\\\"\\n                  [ngClass]=\\\"{ 'is-invalid': submitted && f.password.errors }\\\"\\n                  id=\\\"password\\\"\\n                  placeholder=\\\"Mật khẩu\\\"\\n                />\\n\\n                <div *ngIf=\\\"submitted && f.password.errors\\\" class=\\\"invalid-feedback\\\">\\n                  <div *ngIf=\\\"f.password.errors.required\\\">\\n                    Trường mật khẩu không được để trống\\n                  </div>\\n                </div>\\n              </div>\\n\\n              <div class=\\\"form-group mb-0 text-center\\\">\\n                <button class=\\\"btn btn-primary btn-block\\\" type=\\\"submit\\\">\\n                  Đăng nhập\\n                </button>\\n              </div>\\n            </form>\\n          </div>\\n        </div>\\n\\n        <div class=\\\"row mt-3\\\">\\n          <div class=\\\"col-12 text-center\\\">\\n            <p>\\n              <a routerLink=\\\"/account/reset-password\\\" class=\\\"text-white-50 ml-1\\\">Quên mật khẩu?</a>\\n            </p>\\n          </div>\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n\\n<footer class=\\\"footer footer-alt\\\">\\n  2019-2020 Bản quyền thuộc\\n  <a href=\\\"\\\" class=\\\"text-white-50\\\">CoERP</a>\\n</footer>\\n\"","module.exports = \"<div class=\\\"account-pages mt-5 mb-5\\\">\\n  <div class=\\\"container\\\">\\n    <div class=\\\"row justify-content-center\\\">\\n      <div class=\\\"col-md-8 col-lg-6 col-xl-5\\\">\\n        <div class=\\\"card bg-pattern\\\">\\n          <div class=\\\"card-body p-4\\\">\\n            <!-- Logo -->\\n            <div class=\\\"text-center w-75 m-auto\\\">\\n              <a routerLink=\\\"/account/login\\\">\\n                <img src=\\\"assets/images/1.JPG\\\" alt=\\\"\\\" height=\\\"22\\\" />\\n              </a>\\n              <p class=\\\"text-muted mb-4 mt-3\\\">\\n                Nhập địa chỉ email để nhận được hướng dẫn đặt lại mật khẩu mới\\n              </p>\\n            </div>\\n\\n            <form\\n              class=\\\"needs-validation\\\"\\n              name=\\\"resetForm\\\"\\n              [formGroup]=\\\"resetForm\\\"\\n              (ngSubmit)=\\\"onSubmit()\\\"\\n              novalidate\\n            >\\n              <div class=\\\"form-group mb-3\\\">\\n                <label for=\\\"email\\\">Email</label>\\n\\n                <input\\n                  type=\\\"email\\\"\\n                  formControlName=\\\"email\\\"\\n                  class=\\\"form-control\\\"\\n                  [ngClass]=\\\"{ 'is-invalid': submitted && f.email.errors }\\\"\\n                  id=\\\"email\\\"\\n                  placeholder=\\\"Email\\\"\\n                />\\n\\n                <div *ngIf=\\\"submitted && f.email.errors\\\" class=\\\"invalid-feedback\\\">\\n                  <div *ngIf=\\\"f.email.errors.required\\\">\\n                    Trường email không được để trống\\n                  </div>\\n                  <div *ngIf=\\\"f.email.errors.email\\\">\\n                    Email sai định dạng\\n                  </div>\\n                </div>\\n              </div>\\n\\n              <div class=\\\"form-group mb-0 text-center\\\">\\n                <button class=\\\"btn btn-primary btn-block\\\" type=\\\"submit\\\">\\n                  Gửi\\n                </button>\\n              </div>\\n            </form>\\n          </div>\\n          <!-- end card-body-->\\n        </div>\\n        <!-- end card -->\\n\\n        <div class=\\\"row mt-3\\\">\\n          <div class=\\\"col-12 text-center\\\">\\n            <p class=\\\"text-white-50\\\">\\n              Quay lại\\n              <a routerLink=\\\"/account/login\\\" class=\\\"text-white ml-1\\\"><b>Đăng nhập</b></a>\\n            </p>\\n          </div>\\n          <!-- end col -->\\n        </div>\\n        <!-- end row -->\\n      </div>\\n      <!-- end col -->\\n    </div>\\n    <!-- end row -->\\n  </div>\\n  <!-- end container -->\\n</div>\\n<!-- end page -->\\n\\n<footer class=\\\"footer footer-alt\\\">\\n  2019-2020 Bản quyền thuộc\\n  <a href=\\\"\\\" class=\\\"text-white-50\\\">CoERP</a>\\n</footer>\\n\"","module.exports = \"<div class=\\\"account-pages mt-5 mb-5\\\">\\n  <div class=\\\"container\\\">\\n    <div class=\\\"row justify-content-center\\\">\\n      <div class=\\\"col-md-8 col-lg-6 col-xl-5\\\">\\n        <div class=\\\"card\\\">\\n          <div class=\\\"card-body p-4\\\">\\n            <!-- Logo-->\\n            <div class=\\\"text-center w-75 m-auto\\\">\\n              <a routerLink=\\\"/account/login\\\">\\n                <img src=\\\"assets/images/logo-dark.png\\\" alt=\\\"\\\" height=\\\"22\\\" />\\n              </a>\\n              <p class=\\\"text-muted mb-4 mt-3\\\">Don't have an account? Create your own account, it takes less than a minute</p>\\n            </div>\\n\\n            <form class=\\\"needs-validation\\\" name=\\\"signupForm\\\" [formGroup]=\\\"signupForm\\\" (ngSubmit)=\\\"onSubmit()\\\"\\n              novalidate>\\n\\n              <app-ui-preloader [display]=\\\"loading\\\"></app-ui-preloader>\\n\\n              <ngb-alert type=\\\"danger\\\" *ngIf=\\\"error\\\" [dismissible]=\\\"false\\\">{{ error }}</ngb-alert>\\n\\n              <div class=\\\"form-group mb-3\\\">\\n                <label for=\\\"name\\\">Your name</label>\\n\\n                <input  formControlName=\\\"name\\\" class=\\\"form-control\\\"\\n                  [ngClass]=\\\"{ 'is-invalid': submitted && f.name.errors }\\\" id=\\\"name\\\" placeholder=\\\"Enter your name\\\" />\\n\\n                <div *ngIf=\\\"submitted && f.name.errors\\\" class=\\\"invalid-feedback\\\">\\n                  <div *ngIf=\\\"f.name.errors.required\\\">Name is required</div>\\n                </div>\\n              </div>\\n\\n              <div class=\\\"form-group mb-3\\\">\\n                <label for=\\\"email\\\">Email</label>\\n\\n                <input type=\\\"email\\\" formControlName=\\\"email\\\" class=\\\"form-control\\\"\\n                  [ngClass]=\\\"{ 'is-invalid': submitted && f.email.errors }\\\" id=\\\"email\\\" placeholder=\\\"Email\\\" />\\n\\n                <div *ngIf=\\\"submitted && f.email.errors\\\" class=\\\"invalid-feedback\\\">\\n                  <div *ngIf=\\\"f.email.errors.required\\\">Email is required</div>\\n                  <div *ngIf=\\\"f.email.errors.email\\\">Email must be a valid email address</div>\\n                </div>\\n              </div>\\n\\n              <div class=\\\"form-group mb-3\\\">\\n                <label for=\\\"password\\\">Password</label>\\n\\n                <input type=\\\"password\\\" formControlName=\\\"password\\\" class=\\\"form-control\\\"\\n                  [ngClass]=\\\"{ 'is-invalid': submitted && f.password.errors }\\\" id=\\\"password\\\" placeholder=\\\"Password\\\" />\\n\\n                <div *ngIf=\\\"submitted && f.password.errors\\\" class=\\\"invalid-feedback\\\">\\n                  <div *ngIf=\\\"f.password.errors.required\\\">Password is required</div>\\n                </div>\\n              </div>\\n\\n              <div class=\\\"form-group mb-0 text-center\\\">\\n                <button class=\\\"btn btn-success btn-block\\\" type=\\\"submit\\\">Sign Up</button>\\n              </div>\\n            </form>\\n          </div> <!-- end card-body -->\\n        </div>\\n        <!-- end card -->\\n\\n        <div class=\\\"row mt-3\\\">\\n          <div class=\\\"col-12 text-center\\\">\\n            <p class=\\\"text-white-50\\\">Already have account? <a routerLink=\\\"/account/login\\\" class=\\\"text-white ml-1\\\"><b>Log\\n                  In</b></a></p>\\n          </div> <!-- end col-->\\n        </div>\\n        <!-- end row -->\\n\\n      </div> <!-- end col -->\\n    </div>\\n    <!-- end row -->\\n  </div>\\n  <!-- end container -->\\n</div>\\n<!-- end page -->\\n\\n<footer class=\\\"footer footer-alt\\\">\\n  2015 - 2019 &copy; UBold theme by <a href=\\\"\\\" class=\\\"text-white-50\\\">Coderthemes</a>\\n</footer>\"","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { AuthGuard } from '../core/guards/auth.guard';\n\nconst routes: Routes = [\n  { path: 'auth', loadChildren: () => import('./auth/auth.module').then(m => m.AuthModule) },\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class AccountRoutingModule { }\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { AccountRoutingModule } from './account-routing.module';\nimport { AuthModule } from './auth/auth.module';\n\n@NgModule({\n  declarations: [],\n  imports: [\n    CommonModule,\n    AccountRoutingModule,\n    AuthModule\n  ]\n})\nexport class AccountModule { }\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { LoginComponent } from './login/login.component';\nimport { SignupComponent } from './signup/signup.component';\nimport { ConfirmComponent } from './confirm/confirm.component';\nimport { PasswordresetComponent } from './passwordreset/passwordreset.component';\nimport { FirstLoginComponent } from './first-login/first-login.component';\n\nconst routes: Routes = [\n  {\n    path: 'login',\n    component: LoginComponent\n  },\n  {\n    path: 'signup',\n    component: SignupComponent\n  },\n  {\n    path: 'confirm',\n    component: ConfirmComponent\n  },\n  {\n    path: 'reset-password',\n    component: PasswordresetComponent\n  },\n  {\n    path: 'first-login',\n    component: FirstLoginComponent\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class AuthRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ReactiveFormsModule } from '@angular/forms';\n\nimport { NgbAlertModule } from '@ng-bootstrap/ng-bootstrap';\n\nimport { UIModule } from '../../shared/ui/ui.module';\nimport { LoginComponent } from './login/login.component';\nimport { SignupComponent } from './signup/signup.component';\nimport { AuthRoutingModule } from './auth-routing';\nimport { ConfirmComponent } from './confirm/confirm.component';\nimport { PasswordresetComponent } from './passwordreset/passwordreset.component';\nimport { FirstLoginComponent } from './first-login/first-login.component';\n\n@NgModule({\n  declarations: [LoginComponent, SignupComponent, ConfirmComponent, PasswordresetComponent, FirstLoginComponent],\n  imports: [\n    CommonModule,\n    ReactiveFormsModule,\n    NgbAlertModule,\n    UIModule,\n    AuthRoutingModule\n  ]\n})\nexport class AuthModule { }\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FjY291bnQvYXV0aC9jb25maXJtL2NvbmZpcm0uY29tcG9uZW50LnNjc3MifQ== */\"","import { Component, OnInit, AfterViewInit } from '@angular/core';\n\n@Component({\n  selector: 'app-confirm',\n  templateUrl: './confirm.component.html',\n  styleUrls: ['./confirm.component.scss']\n})\nexport class ConfirmComponent implements OnInit, AfterViewInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n  ngAfterViewInit() {\n    document.body.classList.add('authentication-bg');\n    document.body.classList.add('authentication-bg-pattern');\n  }\n\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FjY291bnQvYXV0aC9maXJzdC1sb2dpbi9maXJzdC1sb2dpbi5jb21wb25lbnQuc2NzcyJ9 */\"","import { Component, OnInit, AfterViewInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { AuthService } from '../../../core/services/api/auth.service';\nimport Swal from 'sweetalert2';\n\n@Component({\n  selector: 'app-first-login',\n  templateUrl: './first-login.component.html',\n  styleUrls: ['./first-login.component.scss']\n})\nexport class FirstLoginComponent implements OnInit, AfterViewInit {\n  form: FormGroup;\n  submitted = false;\n\n  constructor(\n    private formBuilder: FormBuilder,\n    private router: Router,\n    private authService: AuthService\n  ) {}\n\n  ngOnInit() {\n    this.form = this.formBuilder.group({\n      OldPassword: ['', [Validators.required]],\n      NewPassword: ['', [Validators.required]],\n      ConfirmPassword: ['', [Validators.required]]\n    });\n  }\n\n  ngAfterViewInit() {\n    document.body.classList.add('authentication-bg');\n    document.body.classList.add('authentication-bg-pattern');\n  }\n\n  get f() {\n    return this.form.controls;\n  }\n\n  onSubmit() {\n    this.submitted = true;\n    const id = localStorage.getItem('sta_id');\n\n    if (this.form.invalid) {\n      return;\n    }\n    this.authService.changePassword({ id }, this.form.value).subscribe(\n      (res: any) => {\n        if (res && res.Code === 200) {\n          this._notify(true, res.Message);\n          this.router.navigate(['/account/login']);\n        } else {\n          this._notify(false, res.Message);\n        }\n      },\n      e => {\n        this._notify(false, e.Message);\n      }\n    );\n  }\n\n  private _notify(isSuccess: boolean, message: string) {\n    return Swal.fire({\n      toast: true,\n      position: 'top-end',\n      type: isSuccess ? 'success' : 'error',\n      title: message,\n      showConfirmButton: false,\n      timer: 2000\n    });\n  }\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FjY291bnQvYXV0aC9sb2dpbi9sb2dpbi5jb21wb25lbnQuc2NzcyJ9 */\"","import { Component, OnInit, AfterViewInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { StorageService } from '../../../core/services/common/storage.service';\n\nimport { AuthenticationService } from '../../../core/services/common/auth.service';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { Subject, of } from 'rxjs';\nimport { takeUntil, catchError } from 'rxjs/operators';\nimport Swal from 'sweetalert2';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.scss'],\n})\nexport class LoginComponent implements OnInit, AfterViewInit {\n  private destroyed$ = new Subject();\n  loginForm: FormGroup;\n  submitted = false;\n  returnUrl: string;\n\n  constructor(\n    private formBuilder: FormBuilder,\n    private route: ActivatedRoute,\n    private router: Router,\n    private storageService: StorageService,\n    private authenticationService: AuthenticationService\n  ) {}\n\n  ngOnInit() {\n    this.loginForm = this.formBuilder.group({\n      username: ['', [Validators.required]],\n      password: ['', Validators.required],\n    });\n\n    // reset login status\n    this.authenticationService.logout();\n\n    // get return url from route parameters or default to '/'\n    // tslint:disable-next-line: no-string-literal\n    this.returnUrl = this.route.snapshot.queryParams['returnUrl'] || '/';\n  }\n\n  ngAfterViewInit() {\n    document.body.classList.add('authentication-bg');\n    document.body.classList.add('authentication-bg-pattern');\n  }\n\n  // convenience getter for easy access to form fields\n  get f() {\n    return this.loginForm.controls;\n  }\n\n  /**\n   * On submit form\n   */\n  onSubmit() {\n    this.submitted = true;\n\n    // stop here if form is invalid\n    if (this.loginForm.invalid) {\n      return;\n    }\n\n    const login$ = this.authenticationService\n      .login(this.f.username.value, this.f.password.value)\n      .pipe(takeUntil(this.destroyed$), catchError(this.catchError));\n\n    login$.subscribe(\n      (res: any) => {\n        if (res) {\n          if (res && res.access_token && res.staff_Name) {\n            this.storageService.setItem('access_token', res.access_token);\n            this.storageService.setItem('userName', res.staff_Name);\n            this.storageService.setItem('thumbnail', res.url_thumbnai);\n            this.storageService.setItem('sta_id', res.sta_id);\n            this.storageService.setItem('role', res.Role);\n\n            if (res.sta_login === 'True') {\n              this.returnUrl = '/account/first-login';\n              this.router.navigate([this.returnUrl]);\n            } else {\n              Swal.fire({\n                position: 'top-end',\n                type: 'success',\n                title: 'Đăng nhập thành công',\n                showConfirmButton: false,\n                timer: 2000,\n              });\n              this.router.navigate([this.returnUrl]);\n            }\n          }\n        }\n        console.log(res);\n        if (typeof res !== 'object') {\n          Swal.fire({\n            position: 'top-end',\n            type: 'error',\n            title: res.error_description,\n            showConfirmButton: false,\n            timer: 2000,\n          });\n        }\n      },\n      (e) => console.log(e)\n    );\n  }\n\n  private catchError(err) {\n    return of(err);\n  }\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FjY291bnQvYXV0aC9wYXNzd29yZHJlc2V0L3Bhc3N3b3JkcmVzZXQuY29tcG9uZW50LnNjc3MifQ== */\"","import { Component, OnInit, AfterViewInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { AuthService } from '../../../core/services/api/auth.service';\nimport Swal from 'sweetalert2';\n\n@Component({\n  selector: 'app-passwordreset',\n  templateUrl: './passwordreset.component.html',\n  styleUrls: ['./passwordreset.component.scss']\n})\nexport class PasswordresetComponent implements OnInit, AfterViewInit {\n  resetForm: FormGroup;\n  submitted = false;\n\n  constructor(\n    private formBuilder: FormBuilder,\n    private router: Router,\n    private authService: AuthService\n  ) {}\n\n  ngOnInit() {\n    this.resetForm = this.formBuilder.group({\n      email: ['', [Validators.required, Validators.email]]\n    });\n  }\n\n  ngAfterViewInit() {\n    document.body.classList.add('authentication-bg');\n    document.body.classList.add('authentication-bg-pattern');\n  }\n\n  get f() {\n    return this.resetForm.controls;\n  }\n\n  onSubmit() {\n    this.submitted = true;\n\n    if (this.resetForm.invalid) {\n      return;\n    }\n\n    this.authService.forgotPassword(this.resetForm.value.email).subscribe(\n      (res: any) => {\n        if (res && res.Code === 200) {\n          this._notify(true, res.Message);\n          this.router.navigate(['/account/login']);\n          this.authService.sendMailForgot(this.resetForm.value.email).subscribe(res => {\n            console.log(res);\n          });\n        } else this._notify(false, res.Message);\n      },\n      e => {\n        this._notify(false, e.Message);\n      }\n    );\n  }\n\n  private _notify(isSuccess: boolean, message: string) {\n    return Swal.fire({\n      toast: true,\n      position: 'top-end',\n      type: isSuccess ? 'success' : 'error',\n      title: message,\n      showConfirmButton: false,\n      timer: 2000\n    });\n  }\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FjY291bnQvYXV0aC9zaWdudXAvc2lnbnVwLmNvbXBvbmVudC5zY3NzIn0= */\"","import { Component, OnInit, AfterViewInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { ActivatedRoute, Router } from '@angular/router';\n\n@Component({\n  selector: 'app-signup',\n  templateUrl: './signup.component.html',\n  styleUrls: ['./signup.component.scss']\n})\nexport class SignupComponent implements OnInit, AfterViewInit {\n\n  signupForm: FormGroup;\n  submitted = false;\n  error = '';\n  loading = false;\n\n  constructor(private formBuilder: FormBuilder, private route: ActivatedRoute, private router: Router) { }\n\n  ngOnInit() {\n\n    this.signupForm = this.formBuilder.group({\n      name: ['', Validators.required],\n      email: ['', [Validators.required, Validators.email]],\n      password: ['', Validators.required],\n    });\n  }\n\n  ngAfterViewInit() {\n    document.body.classList.add('authentication-bg');\n    document.body.classList.add('authentication-bg-pattern');\n  }\n\n  // convenience getter for easy access to form fields\n  get f() { return this.signupForm.controls; }\n\n  /**\n   * On submit form\n   */\n  onSubmit() {\n    this.submitted = true;\n\n    // stop here if form is invalid\n    if (this.signupForm.invalid) {\n      return;\n    }\n\n    this.loading = true;\n\n    console.log(this.signupForm.value);\n    setTimeout(() => {\n      this.loading = false;\n      this.router.navigate(['/account/confirm']);\n    }, 1000);\n  }\n}\n"],"sourceRoot":""}