{"version":3,"sources":["webpack:///./node_modules/ng2-search-filter/ng2-search-filter.js","webpack:///./src/app/pages/vendor/list-vendor/list-vendor.component.html","webpack:///./src/app/pages/vendor/list-vendor/data.ts","webpack:///./src/app/pages/vendor/list-vendor/list-vendor.component.scss","webpack:///./src/app/pages/vendor/list-vendor/list-vendor.component.ts","webpack:///./src/app/pages/vendor/vendor-routing.module.ts","webpack:///./src/app/pages/vendor/vendor.module.ts"],"names":[],"mappings":"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","file":"vendor-vendor-module-es2015.js","sourcesContent":["import { Injectable, NgModule, Pipe } from '@angular/core';\n\nclass Ng2SearchPipe {\n    /**\n     * @param {?} items object from array\n     * @param {?} term term's search\n     * @return {?}\n     */\n    transform(items, term) {\n        if (!term || !items)\n            return items;\n        return Ng2SearchPipe.filter(items, term);\n    }\n    /**\n     *\n     * @param {?} items List of items to filter\n     * @param {?} term  a string term to compare with every property of the list\n     *\n     * @return {?}\n     */\n    static filter(items, term) {\n        const /** @type {?} */ toCompare = term.toLowerCase();\n        /**\n         * @param {?} item\n         * @param {?} term\n         * @return {?}\n         */\n        function checkInside(item, term) {\n            for (let /** @type {?} */ property in item) {\n                if (item[property] === null || item[property] == undefined) {\n                    continue;\n                }\n                if (typeof item[property] === 'object') {\n                    if (checkInside(item[property], term)) {\n                        return true;\n                    }\n                }\n                if (item[property].toString().toLowerCase().includes(toCompare)) {\n                    return true;\n                }\n            }\n            return false;\n        }\n        return items.filter(function (item) {\n            return checkInside(item, term);\n        });\n    }\n}\nNg2SearchPipe.decorators = [\n    { type: Pipe, args: [{\n                name: 'filter',\n                pure: false\n            },] },\n    { type: Injectable },\n];\n/**\n * @nocollapse\n */\nNg2SearchPipe.ctorParameters = () => [];\n\nclass Ng2SearchPipeModule {\n}\nNg2SearchPipeModule.decorators = [\n    { type: NgModule, args: [{\n                declarations: [Ng2SearchPipe],\n                exports: [Ng2SearchPipe]\n            },] },\n];\n/**\n * @nocollapse\n */\nNg2SearchPipeModule.ctorParameters = () => [];\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { Ng2SearchPipeModule, Ng2SearchPipe };\n//# sourceMappingURL=ng2-search-filter.js.map\n","module.exports = \"<div class=\\\"container-fluid\\\">\\n  <app-page-title\\n    title=\\\"Nhà cung cấp\\\"\\n    [breadcrumbItems]=\\\"breadCrumbItems\\\"\\n  ></app-page-title>\\n\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col-xl-8 order-xl-1 order-2\\\">\\n      <div class=\\\"card mb-2\\\">\\n        <div class=\\\"card-body\\\">\\n          <div class=\\\"row\\\">\\n            <div class=\\\"col-lg-8\\\">\\n              <form class=\\\"form-inline row\\\">\\n                <div class=\\\"form-group col-sm-auto\\\">\\n                  <input\\n                    type=\\\"search\\\"\\n                    class=\\\"form-control\\\"\\n                    placeholder=\\\"Tìm kiếm...\\\"\\n                    name=\\\"search\\\"\\n                    [(ngModel)]=\\\"term\\\"\\n                  />\\n                </div>\\n                <div class=\\\"form-group col-sm-auto\\\">\\n                  <label for=\\\"status-select\\\" class=\\\"mr-2\\\">Sắp xếp</label>\\n                  <select class=\\\"custom-select\\\" id=\\\"status-select\\\">\\n                    <option selected=\\\"\\\">Tất cả</option>\\n                    <option value=\\\"1\\\">Khách quen</option>\\n                    <option value=\\\"2\\\">Khách VIP</option>\\n                    <option value=\\\"3\\\">Khách BNI</option>\\n                    <option value=\\\"4\\\">Khách khác</option>\\n                  </select>\\n                </div>\\n              </form>\\n            </div>\\n            <div class=\\\"col-lg-4\\\">\\n              <div class=\\\"text-lg-right mt-3 mt-lg-0\\\">\\n                <button type=\\\"button\\\" class=\\\"btn btn-success mr-1\\\">\\n                  <i class=\\\"mdi mdi-settings\\\"></i>\\n                </button>\\n                <a\\n                  href=\\\"javascript: void(0);\\\"\\n                  class=\\\"btn btn-danger\\\"\\n                  (click)=\\\"openModal(content)\\\"\\n                  ><i class=\\\"mdi mdi-plus-circle mr-1\\\"></i> Thêm mới</a\\n                >\\n              </div>\\n            </div>\\n            <!-- end col-->\\n          </div>\\n          <!-- end row -->\\n        </div>\\n        <!-- end card-body-->\\n      </div>\\n      <!-- end card-->\\n\\n      <div\\n        class=\\\"card-box mb-2\\\"\\n        *ngFor=\\\"let opportunity of opportunityData | filter: term\\\"\\n      >\\n        <div class=\\\"row align-items-center\\\">\\n          <div class=\\\"col-sm-4\\\">\\n            <div class=\\\"media\\\">\\n              <img\\n                class=\\\"d-flex align-self-center mr-3 rounded-circle\\\"\\n                src=\\\"{{ opportunity.company }}\\\"\\n                alt=\\\"Generic placeholder image\\\"\\n                height=\\\"64\\\"\\n              />\\n              <div class=\\\"media-body\\\">\\n                <h4 class=\\\"mt-0 mb-2 font-16\\\">{{ opportunity.name }}</h4>\\n                <p class=\\\"mb-1\\\"><b>Địa chỉ:</b> {{ opportunity.location }}</p>\\n                <p class=\\\"mb-0\\\"><b>Lĩnh vực:</b> {{ opportunity.category }}</p>\\n              </div>\\n            </div>\\n          </div>\\n          <div class=\\\"col-sm-4\\\">\\n            <p class=\\\"mb-1 mt-3 mt-sm-0\\\">\\n              <i class=\\\"mdi mdi-email mr-1\\\"></i> {{ opportunity.email }}\\n            </p>\\n            <p class=\\\"mb-0\\\">\\n              <i class=\\\"mdi mdi-phone-classic mr-1\\\"></i> {{ opportunity.phone }}\\n            </p>\\n          </div>\\n          <div class=\\\"col-sm-2\\\">\\n            <div class=\\\"text-center mt-3 mt-sm-0\\\">\\n              <div\\n                class=\\\"badge font-14 p-1\\\"\\n                [ngClass]=\\\"{\\n                  'bg-soft-info text-info': opportunity.status === 'Amazon',\\n                  'bg-soft-primary text-primary':\\n                    opportunity.status === 'Apple',\\n                  'bg-soft-warning text-warning':\\n                    opportunity.status === 'Google',\\n                  'bg-soft-danger text-danger': opportunity.status === 'Airbnb',\\n                  'bg-soft-success text-success': opportunity.status === 'Cisco'\\n                }\\\"\\n              >\\n                {{ opportunity.status }}\\n              </div>\\n            </div>\\n          </div>\\n          <div class=\\\"col-sm-2\\\">\\n            <div class=\\\"text-sm-right\\\">\\n              <a href=\\\"javascript:void(0);\\\" class=\\\"action-icon\\\">\\n                <i class=\\\"mdi mdi-square-edit-outline\\\"></i\\n              ></a>\\n              <a href=\\\"javascript:void(0);\\\" class=\\\"action-icon\\\">\\n                <i class=\\\"mdi mdi-delete\\\"></i\\n              ></a>\\n            </div>\\n          </div>\\n          <!-- end col-->\\n        </div>\\n        <!-- end row -->\\n      </div>\\n      <!-- end card-box-->\\n      <div class=\\\"text-center my-4\\\">\\n        <a href=\\\"javascript:void(0);\\\" class=\\\"text-danger\\\"\\n          ><i class=\\\"mdi mdi-spin mdi-loading mr-1\\\"></i> Tải thêm\\n        </a>\\n      </div>\\n    </div>\\n    <div class=\\\"col-xl-4 order-xl-2 order-1\\\">\\n      <div class=\\\"card-box\\\" dir=\\\"ltr\\\">\\n        <h4 class=\\\"header-title mb-3 text-center\\\">\\n          Biểu đồ tỉ lệ sản phẩm cung cấp\\n        </h4>\\n\\n        <div class=\\\"text-center\\\">\\n          <apx-chart\\n            [series]=\\\"simplePieChart.series\\\"\\n            [chart]=\\\"simplePieChart.chart\\\"\\n            [labels]=\\\"simplePieChart.labels\\\"\\n            [dataLabels]=\\\"simplePieChart.dataLabels\\\"\\n            [legend]=\\\"simplePieChart.legend\\\"\\n            [colors]=\\\"simplePieChart.colors\\\"\\n            [responsive]=\\\"simplePieChart.responsive\\\"\\n          >\\n          </apx-chart>\\n          <p class=\\\"text-muted font-15 font-family-secondary mb-0 mt-3\\\">\\n            <span class=\\\"mx-2\\\"\\n              ><i class=\\\"mdi mdi-checkbox-blank-circle text-success\\\"></i>\\n              Amazon</span\\n            >\\n            <span class=\\\"mx-2\\\"\\n              ><i class=\\\"mdi mdi-checkbox-blank-circle text-info\\\"></i>\\n              Apple</span\\n            >\\n            <span class=\\\"mx-2\\\"\\n              ><i class=\\\"mdi mdi-checkbox-blank-circle text-primary\\\"></i>\\n              Google</span\\n            >\\n            <span class=\\\"mx-2\\\"\\n              ><i class=\\\"mdi mdi-checkbox-blank-circle text-warning\\\"></i>\\n              AirBnb</span\\n            >\\n            <span class=\\\"mx-2\\\"\\n              ><i class=\\\"mdi mdi-checkbox-blank-circle text-danger\\\"></i>\\n              Cisco</span\\n            >\\n          </p>\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n\\n<!-- Opportunities model -->\\n<ng-template #content role=\\\"document\\\" let-modal=\\\"close\\\">\\n  <div class=\\\"modal-header bg-dark\\\">\\n    <h4 class=\\\"modal-title text-white\\\">Add New Opportunities</h4>\\n    <button\\n      type=\\\"button\\\"\\n      class=\\\"close text-white\\\"\\n      aria-label=\\\"Close\\\"\\n      (click)=\\\"modal('Cross click')\\\"\\n    >\\n      <span aria-hidden=\\\"true\\\">&times;</span>\\n    </button>\\n  </div>\\n  <div class=\\\"modal-body p-3\\\">\\n    <div class=\\\"text-left\\\">\\n      <form (ngSubmit)=\\\"saveData()\\\" [formGroup]=\\\"validationform\\\">\\n        <div class=\\\"form-group\\\">\\n          <label for=\\\"name\\\">Company Name</label>\\n          <input\\n            type=\\\"text\\\"\\n            class=\\\"form-control\\\"\\n            id=\\\"name\\\"\\n            placeholder=\\\"Enter company name\\\"\\n            formControlName=\\\"name\\\"\\n            [ngClass]=\\\"{ 'is-invalid': submitted && form.name.errors }\\\"\\n          />\\n          <div *ngIf=\\\"submitted && form.name.errors\\\" class=\\\"invalid-feedback\\\">\\n            <span *ngIf=\\\"form.name.errors.required\\\"\\n              >This value is required.</span\\n            >\\n            <span *ngIf=\\\"form.name.errors.pattern\\\"\\n              >This value should be a valid name.</span\\n            >\\n          </div>\\n        </div>\\n\\n        <div class=\\\"form-group\\\">\\n          <label for=\\\"email\\\">Email address</label>\\n          <input\\n            class=\\\"form-control\\\"\\n            id=\\\"email\\\"\\n            placeholder=\\\"Enter email\\\"\\n            formControlName=\\\"email\\\"\\n            [ngClass]=\\\"{ 'is-invalid': submitted && form.email.errors }\\\"\\n          />\\n          <div *ngIf=\\\"submitted && form.email.errors\\\" class=\\\"invalid-feedback\\\">\\n            <span *ngIf=\\\"form.email.errors.required\\\"\\n              >This value is required.</span\\n            >\\n            <span *ngIf=\\\"form.email.errors.pattern\\\"\\n              >Please enter valid email.</span\\n            >\\n          </div>\\n        </div>\\n\\n        <div class=\\\"form-group\\\">\\n          <label>Phone </label>\\n          <input\\n            type=\\\"text\\\"\\n            class=\\\"form-control\\\"\\n            placeholder=\\\"Enter phone number\\\"\\n            formControlName=\\\"phone\\\"\\n            [ngClass]=\\\"{ 'is-invalid': submitted && form.phone.errors }\\\"\\n            minlength=\\\"10\\\"\\n          />\\n          <div *ngIf=\\\"submitted && form.phone.errors\\\" class=\\\"invalid-feedback\\\">\\n            <span *ngIf=\\\"form.phone.errors.required\\\"\\n              >This value is required.</span\\n            >\\n            <span *ngIf=\\\"form.phone.errors.minlength\\\"\\n              >Phone number must be 10 characters.</span\\n            >\\n          </div>\\n        </div>\\n\\n        <div class=\\\"form-group\\\">\\n          <label>Category </label>\\n          <input\\n            class=\\\"form-control\\\"\\n            placeholder=\\\"Enter category\\\"\\n            formControlName=\\\"category\\\"\\n            [ngClass]=\\\"{ 'is-invalid': submitted && form.category.errors }\\\"\\n          />\\n          <div\\n            *ngIf=\\\"submitted && form.category.errors\\\"\\n            class=\\\"invalid-feedback\\\"\\n          >\\n            <span *ngIf=\\\"form.category.errors.required\\\"\\n              >This value is required.</span\\n            >\\n          </div>\\n        </div>\\n\\n        <div class=\\\"text-right\\\">\\n          <button type=\\\"submit\\\" class=\\\"btn btn-success\\\">Save</button>\\n          <button\\n            type=\\\"button\\\"\\n            class=\\\"btn btn-danger ml-1\\\"\\n            (click)=\\\"modal('close click')\\\"\\n          >\\n            Cancel\\n          </button>\\n        </div>\\n      </form>\\n    </div>\\n  </div>\\n</ng-template>\\n\"","import { ChartType } from './opportunities.model';\n\nconst opportunityData = [\n  {\n    company: 'assets/images/companies/amazon.png',\n    name: 'Amazon Inc.',\n    location: 'Seattle, Washington',\n    category: 'Ecommerce',\n    email: 'collier@jourrapide.com',\n    phone: '828-216-2190',\n    status: 'Amazon'\n  },\n  {\n    company: 'assets/images/companies/apple.png',\n    name: 'Apple Inc.',\n    location: 'Cupertino, California',\n    category: 'Ecommerce',\n    email: 'deanes@dayrep.com',\n    phone: '077 6157 4248',\n    status: 'Apple'\n  },\n  {\n    company: 'assets/images/companies/google.png',\n    name: 'Google LLC',\n    location: 'Menlo Park, California',\n    category: 'Search engine',\n    email: 'nnac@hotmai.us',\n    phone: '(216) 76 298 896',\n    status: 'Google'\n  },\n  {\n    company: 'assets/images/companies/airbnb.png',\n    name: 'Airbnb Inc.',\n    location: 'San Francisco, California',\n    category: 'Real Estate',\n    email: 'austin@dayrep.com',\n    phone: '(02) 75 150 655',\n    status: 'Airbnb'\n  },\n  {\n    company: 'assets/images/companies/cisco.png',\n    name: 'Cisco Systems',\n    location: 'San Jose, California',\n    category: 'Operating Systems',\n    email: 'annette@email.net',\n    phone: '(+15) 73 483 758',\n    status: 'Cisco'\n  }\n];\n\n/*---------------------Chart ------------------------- */\nconst simplePieChart: ChartType = {\n  chart: {\n    height: 270,\n    type: 'pie'\n  },\n  series: [20, 40, 30, 10, 28],\n  labels: ['Amazon', 'Apple', 'Google', 'Airbnb', 'Cisco'],\n  colors: ['#4fc6e1', '#6658dd', '#f7b84b', '#f1556c', '#1abc9c'],\n  legend: {\n    show: false\n  },\n  dataLabels: {\n    enabled: false\n  },\n  responsive: [\n    {\n      breakpoint: 600,\n      options: {\n        chart: {\n          height: 240\n        },\n        legend: {\n          show: false\n        }\n      }\n    }\n  ]\n};\n\nexport { opportunityData, simplePieChart };\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3BhZ2VzL3ZlbmRvci9saXN0LXZlbmRvci9saXN0LXZlbmRvci5jb21wb25lbnQuc2NzcyJ9 */\"","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, Validators, FormGroup } from '@angular/forms';\n\nimport { NgbModal } from '@ng-bootstrap/ng-bootstrap';\n\nimport { opportunityData, simplePieChart } from './data';\n\nimport { Opportunities, ChartType } from './opportunities.model';\n\n@Component({\n  selector: 'app-list-vendor',\n  templateUrl: './list-vendor.component.html',\n  styleUrls: ['./list-vendor.component.scss']\n})\nexport class ListVendorComponent implements OnInit {\n  // bread crumb items\n  breadCrumbItems: Array<{}>;\n\n  opportunityData: Opportunities[];\n  simplePieChart: ChartType;\n  term: any;\n  submitted: boolean;\n\n  // validation form\n  validationform: FormGroup;\n\n  constructor(\n    private modalService: NgbModal,\n    public formBuilder: FormBuilder\n  ) {}\n\n  ngOnInit() {\n    // tslint:disable-next-line: max-line-length\n    this.breadCrumbItems = [\n      { label: 'ERP', path: '/' },\n      { label: 'Nhà cung cấp', path: '/' },\n      { label: 'Thông tin nhà cung cấp', path: '/', active: true }\n    ];\n\n    /**\n     * form validation\n     */\n    this.validationform = this.formBuilder.group({\n      name: ['', [Validators.required]],\n      phone: ['', [Validators.required]],\n      category: ['', [Validators.required]],\n      email: [\n        '',\n        [\n          Validators.required,\n          Validators.pattern('[a-z0-9._%+-]+@[a-z0-9.-]+.[a-z]{2,3}$')\n        ]\n      ]\n    });\n    /**\n     * fetches data\n     */\n    this._fetchData();\n  }\n  /**\n   * Returns form\n   */\n  get form() {\n    return this.validationform.controls;\n  }\n  /**\n   * Modal Open\n   * @param content modal content\n   */\n  openModal(content: string) {\n    this.modalService.open(content, { centered: true });\n  }\n\n  /**\n   * save the Opportunities data\n   */\n  saveData() {\n    const name = this.validationform.get('name').value;\n    const phone = this.validationform.get('phone').value;\n    const category = this.validationform.get('category').value;\n    const email = this.validationform.get('email').value;\n\n    if (this.validationform.valid) {\n      this.opportunityData.push({\n        company: 'assets/images/companies/amazon.png',\n        name,\n        phone,\n        location: 'California',\n        category,\n        email,\n        status: 'Won'\n      });\n      this.validationform = this.formBuilder.group({\n        name: '',\n        phone: '',\n        location: '',\n        email: ''\n      });\n      this.modalService.dismissAll();\n    }\n    this.submitted = true;\n  }\n  /**\n   * fetches the opportunities value\n   */\n  private _fetchData() {\n    this.opportunityData = opportunityData;\n\n    this.simplePieChart = simplePieChart;\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { ListVendorComponent } from './list-vendor/list-vendor.component';\n\nconst routes: Routes = [\n  {\n    path: 'list-vendor',\n    component: ListVendorComponent\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class VendorRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { NgbModalModule } from '@ng-bootstrap/ng-bootstrap';\nimport { UIModule } from '../../shared/ui/ui.module';\nimport { NgApexchartsModule } from 'ng-apexcharts';\nimport { Ng2SearchPipeModule } from 'ng2-search-filter';\nimport { ListVendorComponent } from './list-vendor/list-vendor.component';\nimport { VendorRoutingModule } from './vendor-routing.module';\n\n@NgModule({\n  declarations: [ListVendorComponent],\n  imports: [\n    CommonModule,\n    VendorRoutingModule,\n    FormsModule,\n    ReactiveFormsModule,\n    UIModule,\n    NgApexchartsModule,\n    Ng2SearchPipeModule,\n    NgbModalModule\n  ]\n})\nexport class VendorModule {}\n"],"sourceRoot":""}